//Wohnung JavaScript
//START PARITY NODE WITH: 
//parity --chain ropsten --warp --rpcapi "eth,net,web3,personal,parity"

// Interaction with Ethereum
var Web3 = require('web3')
var web3 = new Web3()

// connect to the local node
web3.setProvider(new web3.providers.HttpProvider('http://localhost:8545'))

// The contract that we are going to interact with
var contractAddress = '0xa6055760a13A50625F074a7985B43De64c1259BD'

//Define ethAccount
var ethAccount = '0x00B66A502947325f586A010867D49446093d4e5A'

// Define the ABI (Application Binary Interface)
var ABI = JSON.parse('[ { "constant": false, "inputs": [ { "name": "_name", "type": "string" }, { "name": "staubsauger_address", "type": "address" }, { "name": "fw_hash", "type": "string" } ], "name": "staubsauger_angelegen", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "ich_sperre_tuer", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "address" } ], "name": "registrierte_wohnung", "outputs": [ { "name": "ID_wohnung", "type": "uint256" }, { "name": "is_active", "type": "bool" }, { "name": "name", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "ID_wohnung_counter", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "ID_staubsauger_counter", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "name": "wohnung_adresse", "type": "address" } ], "name": "ich_mache_sauber", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "kill", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "reinigungskosten", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "name": "_name", "type": "string" }, { "name": "wohnung_address", "type": "address" } ], "name": "wohnung_angelegen", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "ich_entsperre_tuer", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "ID_Angebot_counter", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "name": "wohnung_adresse", "type": "address" } ], "name": "ich_habe_geputzt", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "mach_mich_sauber", "outputs": [], "payable": true, "stateMutability": "payable", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "address" } ], "name": "registrierte_staubsauger", "outputs": [ { "name": "ID_staubsauger", "type": "uint256" }, { "name": "is_active", "type": "bool" }, { "name": "name", "type": "string" }, { "name": "firmware_hash", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "admin", "outputs": [ { "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "wohnung_addresse", "type": "address" }, { "indexed": false, "name": "ID_wohnung", "type": "uint256" }, { "indexed": false, "name": "name", "type": "string" } ], "name": "Wohnung_angelegt", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "staubsauger_addresse", "type": "address" }, { "indexed": false, "name": "ID_staubsauger", "type": "uint256" }, { "indexed": false, "name": "name", "type": "string" } ], "name": "Staubsauger_angelegt", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "wohnung_addresse", "type": "address" }, { "indexed": false, "name": "ether_vorhanden", "type": "bool" } ], "name": "Mich_Sauber_machen", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "wohnung_addresse", "type": "address" } ], "name": "Falsche_Ueberweisung", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "staubsauger_addresse", "type": "address" }, { "indexed": false, "name": "wohnung_addresse", "type": "address" } ], "name": "Wohnung_nicht_genug_Ether", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "staubsauger_adresse", "type": "address" }, { "indexed": false, "name": "wohnung_addresse", "type": "address" } ], "name": "Ich_mache_sauber", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "wohnung_addresse", "type": "address" } ], "name": "Ich_entsperre_tuer", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "staubsauger_addresse", "type": "address" }, { "indexed": false, "name": "wohnung_addresse", "type": "address" } ], "name": "Ich_habe_geputzt", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "staubsauger_addresse", "type": "address" }, { "indexed": false, "name": "wohnung_addresse", "type": "address" } ], "name": "Leistung_nicht_bezahlt", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "wohnung_addresse", "type": "address" } ], "name": "Ich_sperre_tuer", "type": "event" } ]')

// contract object
var contract = web3.eth.contract(ABI).at(contractAddress);

//set default account (for web3 sendtransaction method)
if (!web3.eth.defaultAccount) { 
 web3.eth.defaultAccount = ethAccount;
 }

//Einloggen mit Account und Passwort (notwendig eigener Account in der eigenen Node)
web3.personal.unlockAccount(ethAccount, '<YOUR PASSWORT>');


//Auf init signal warten, um Mach_mich_sauber auszulösen
//TODO Input Button für Event Start an Raspberry Pi/Arduino
/*var schmutzig = false;
var readline = require('readline');
var i = readline.createInterface(process.stdin, process.stdout, null);
  i.question('Muss der Raum geputzt werden? [j/n] ', function(answer) {
    if(answer=='j'){
	schmutzig = true;
	console.log("schmutzig == true gesetzt!");
	}
    i.close();
    process.stdin.destroy();
  });*/

//Prüfen ob input Signal true ist
//if(schmutzig){
//Wenn schmutzig, dann soll sauber gemacht werden
console.log("Ich bin schmutzig");
contract.mach_mich_sauber.sendTransaction({value: web3.toWei('1','ether'),  gas: 100000});
console.log("Auftrag zum sauber machen versendet");
//}else{
//console.log("Ich bin nicht schmutzig" + schmutzig);
//}

//Listener für das Event Wohnung_nicht_genug_Ether
var e_Wohnung_nicht_genug_Ether = contract.Wohnung_nicht_genug_Ether();
e_Wohnung_nicht_genug_Ether.watch(function(error, result) {
 if (!error) {
 console.log(result);
 }else{
 console.log('Es gab einen Fehler bei dem Event --> Wohnung nicht genug Ether: ' + error);
 }
})

//Listener für das Event Ich_mache_sauber
var e_Ich_mache_sauber = contract.Ich_mache_sauber();
e_Ich_mache_sauber.watch(function(error, result) {
 if (!error) {
//Überprüfen, ob übermittelte Wohnungsadresse meiner Addresse (Wohnung) entspricht
//Ansonsten redet staubsauger mit einer anderne Wohnung
   //var res_txt=JSON.parse(result);
   //if(res_txt.args.wohnung_addresse == ethAccount){
    console.log("Tür auf!");
    //Blink oder anderes Event
    //Ich entsperre Tür
    web3.personal.unlockAccount(ethAccount, '<YOUR PASSWORT>');
    contract.ich_entsperre_tuer.sendTransaction({gas: 100000});
   //}else{
   //console.log("Ich_mache_sauber Event wurde erkannt, jedoch mit anderer Wohnungsadresse");
   //}
 }else{
 console.log('Es gab einen Fehler bei dem Event --> Ich_mache_sauber: ' + error);
 }
})

//Listener für das Event Ich_habe_geputzt
var e_Ich_habe_geputzt = contract.Ich_habe_geputzt();
e_Ich_habe_geputzt.watch(function(error, result) {
 if (!error) {
//Überprüfen, ob übermittelte Wohnungsadresse meiner Addresse (Wohnung) entspricht
//Ansonsten redet staubsauger mit einer anderne Wohnung
   //var res_txt=JSON.parse(result);
   //if(res_txt.args.wohnung_addresse == ethAccount){
    console.log("Tür zu!");
    //Blink oder anderes Event
    //Sperre Tür
    web3.personal.unlockAccount(ethAccount, '<YOUR PASSWORT>');
    contract.ich_sperre_tuer.sendTransaction({gas: 100000});
   //}else{
   //console.log("Ich_habe_geputzt Event wurde erkannt, jedoch mit anderer Wohnungsadresse");
   //}
 }else{
 console.log('Es gab einen Fehler bei dem Event --> Ich_habe_geputzt: ' + error);
 }
})

//TODO Event Leistung_nicht_bezahlt wird derzeit nicht berücksichtigt
